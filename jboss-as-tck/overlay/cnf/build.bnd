# Very general
project.dependson       = ${p-dependson;:}
project.bootclasspath   = ${p-bootclasspath;:}
project.buildpath       = ${p-buildpath;:}
project.sourcepath      = ${p-sourcepath;:}
project.allsourcepath   = ${p-allsourcepath;:}
project.output          = ${p-output}
project.testpath        = ${p-testpath;:}
project.workspace		= ${workspace}
project.dir				= ${project}

-verbose				= true
verbose					= false
src                     = src
bin                     = bin
target-dir				= generated
target					= ${project}/${target-dir}
build					= ${workspace}/cnf
licensed				= ${workspace}/licensed
repo					= ${build}/repo
licensed-repo			= ${licensed}/repo
project.name            = ${basename;${project}}
p			            = ${project.name}
bin.includes			= ${project.name}.jar
prebuild				= 

# Java compiler options
java 					= java
javac 					= javac
javac.debug				= on
javac.source 			= 1.3
javac.target 			= 1.2


#Bnd options
-sources               	= true
-sourcepath             = ${project}/src 

-plugin	            	= aQute.lib.deployer.FileRepo; \
                                location=${repo}, \
                          aQute.lib.deployer.FileRepo; \
                                location=${licensed-repo}; \
                                readonly=true, \
  						  aQute.bnd.signing.JartoolSigner; \
  						        keystore=${build}/keystore; \
  						        keypass=testtest; \
  						        storepass=testtest, \
                          Packaging; \
                                path:="${build}/${bin}";\
                                command:=-pack, \
                          Coverage; \
                                path:="${build}/${bin},${workspace}/org.osgi.tools/${bin}"; \
                                command:="-coverage", \
                          SignatureTest; \
                                path:=${build}/${bin}; \
                                command:="-signaturetest"


-make                   =  \
  (*).(jar);                             type=bnd;  recipe="bnd/$1.bnd"


# Time options
# base.modified is used by bnd to not make when files are not changed
base.modified			= ${fmodified;${build}/build.xml,${build}/build.bnd,${project}/bnd.bnd,${project}/build.xml}
base.modified.readable	= ${long2date;${base.modified}}
project.build			= ${tstamp;yyyyMMddhhmm}

copyright = Copyright (c) OSGi Alliance (2000, ${tstamp;yyyy}). All Rights Reserved.
copyright.html = Copyright &copy; OSGi Alliance (2000, ${tstamp;yyyy}). All Rights Reserved.

osgi.release				= 4
osgi.version				= 4.2
-versionpolicy				= "[${version;==;${@}},${version;+;${@}})"

osgi.build.version			= ${osgi.version}.0.${project.build}

core.published.version		= 4.2.0
core.build.version			= ${version;==+=;${osgi.build.version}}

cmpn.published.version		= 4.2.0
cmpn.build.version			= ${version;==+=;${osgi.build.version}}

mobile.published.version	= 4.0.0
mobile.build.version		= ${version;====;${osgi.build.version}}

enterprise.published.version = 4.2.0
enterprise.build.version	= ${version;==+=;${osgi.build.version}}

# Never released
proposed.build.version		= ${version;====;${osgi.build.version}}


# Documentation
Bundle-Copyright       	= ${copyright}
Bundle-Vendor			= OSGi Alliance
-removeheaders			= Include-Resource, Private-Package

junit.package			= junit.framework;version=3.8
junit					= com.springsource.junit;version=3.8;export="${junit.package}"

-runpath							= \
    @jboss-as-embedded@;version=file, \
    @jboss-modules@;version=file, \
    @jboss-logging@;version=file, \
    @jboss-as-controller-client@;version=file, \
    @jboss-logmanager@;version=file, \
    @jboss-dmr@;version=file, \
    @jboss-msc@;version=file, \
    @jboss-osgi-core@;version=file, \
    @jboss-osgi-launcher@;version=file, \
    @jboss-as-dir@/osgi/tck/lib/osgix.jar;version=file, \
	${junit}

# Use the following for 4.3 framework RI development	
#-runpath							= \
#	org.osgi.framework;						version=project, \
#	org.osgi.service.composite;				version=project, \
#	org.osgi.service.packageadmin;			version=project, \
#	org.osgi.service.startlevel;			version=project, \
#	org.osgi.util.tracker;					version=project, \
#	org.eclipse.osgi;		version=project, \
#	${junit}

# Use the following for the binary 4.3 prototype from the repo
#-runpath							= \
#	org.eclipse.osgi.v43prototype;		version=3.7.0, \
#	${junit}

runproperties = report=true, \
        jboss.home="@jboss-as-dir@/build/target/@jboss-as-buildname@", \
	osgi.compatibility.bootdelegation=false, \
	osgi.resolverMode=strict, \
	osgi.support.multipleHosts=true
runsecureproperties = ${runproperties}, \
	org.osgi.framework.security=osgi, \
	org.osgi.framework.trust.repositories=${build}/keystore

-runproperties = ${runproperties}

testcases = ${classes;extending;junit.framework.TestCase|*DefaultTestBundleControl;concrete}


